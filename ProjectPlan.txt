Each company will have their own version of the SakuraPayments Contract
Each company will have their own website, hosted by Sakura SakuraPayments

Demo version will be paid by Sakura Payments

Centered around an array of Employee Structs
This will be known as a 'Company'


Employee has roles: Owner, Admin, Normal

Normal:
- View Salary
- View Position
- View Name
- Return Wallet Address
- Log In
- Log Hours
- View Payment Period
- View Salary YTD
- Download Tax

Admin: Inherits all Normal functions
- View all Employees (need a function that returns # of active accounts)
- Edit Name
- Edit Hours
- Edit Payment Information
- Edit Position
- Change Wallet Address
- Reset Contractor Payment
X Add Employees
X Remove Employees

Owner:  Inherits all Admin functions
- Pay all Employees (Cooldown function)
- Change Pay Period
- Designate Admin
- Remove Admin
- Transfer Ownership
- Delete/Wipe Contract
- View Company Statistics

General Functions:

Demo:

3 Different Views
Array of [ARBITRARY VALUE] Employees
Employee must be REPLACED if array is full
All employees will be given a set address owned by Sakura Payments


Pay function will 'Pay' all employees at fixed amount of ether regaurdless of salary/wage
Ethereum API will display each of the transactions in another window

Owner cannot be replaced

Employee:
- Views the most recently added Employee
- Gives Error code if no employees are added

Admin:
- Loads most recently added Admin
- Loads admin View
- Gives Error if no Admins are added

Owner:
- Loads the single owner account
- Cannot be deleted or added
- Loads owner view


TO DO: 
- isValid modifier for IDs
- return value on all functions to communicate with web3js
- write isValid function that returns true/false based on ID



